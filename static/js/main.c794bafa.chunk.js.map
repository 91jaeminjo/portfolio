{"version":3,"sources":["components/home.jsx","components/navigationbar.jsx","components/projects.jsx","components/projects/pomodoro/SetTime.jsx","components/projects/pomodoro/Pomodoro.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","id","Component","Navigationbar","style","marginLeft","src","process","alt","height","width","href","Projects","to","SetTime","props","this","titleId","title","incId","onClick","onInc","lengthId","length","decId","onDec","React","TimeClock","state","breakLength","sessionLength","currentSession","currentStatus","time","timeInterval","restart","count","incBreakLength","bind","decBreakLength","incSessionLength","decSessionLength","startStop","countDown","clock","reset","session","timer","setState","audioBeep","currentTime","play","minutes","Math","floor","seconds","pause","clearInterval","intervalId","setInterval","ref","audio","type","App","AppRouter","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c794bafa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\" id=\"home\">\r\n                <h1>Hello My name is Jae-Min Jo</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Navigationbar extends Component {\r\n    render() {\r\n        \r\n        return (\r\n          <div className=\"navigationbar text-left\">\r\n            <img style={{marginLeft:1+'em'}} src={process.env.PUBLIC_URL+'/logo-via-logohub.png'} alt=\"Logo\" height=\"50px\" width=\"240px\"></img>\r\n            <br/>\r\n            <br/>\r\n            <h3 className=\"font-weight-bold\" style={{marginLeft:1+'em'}}>Navigation</h3>\r\n              \r\n              <ul className=\"nav-items\">\r\n                <li><a href=\"#home\">Home</a></li>\r\n                <li><a href=\"#projects\">Projects</a></li>\r\n              </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div className=\"projects\" id=\"projects\">\r\n            <h1>My Projects</h1>\r\n            <div>\r\n                <ul>\r\n                    <li><Link to=\"/TimeClock\">Time Clock</Link></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\n\r\n\r\n\r\n\r\nexport default class SetTime extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.props.titleId}>\r\n                <h3>{this.props.title}</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-3\">\r\n                        <button id={this.props.incId} onClick={this.props.onInc}>\r\n                            <i className=\"fa fa-arrow-up fa-2x\" />up\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\" id={this.props.lengthId}>\r\n                        {this.props.length}\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                        <button id={this.props.decId} onClick={this.props.onDec}>\r\n                            <i className=\"fa fa-arrow-down fa-2x\" />down\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\"></div>\r\n                </div>\r\n                <div></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport SetTime from './SetTime'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nvar timeInterval\r\n\r\n\r\nexport default class TimeClock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            breakLength: 5,\r\n            sessionLength: 25,\r\n            currentSession: \"Session\",\r\n            currentStatus: \"Stopped\",\r\n            time: 1500,\r\n            timeInterval: '',\r\n            restart: 0,\r\n            count: 0\r\n        };\r\n\r\n        this.incBreakLength = this.incBreakLength.bind(this);\r\n        this.decBreakLength = this.decBreakLength.bind(this);\r\n        this.incSessionLength = this.incSessionLength.bind(this);\r\n        this.decSessionLength = this.decSessionLength.bind(this);\r\n        this.startStop = this.startStop.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n        this.clock = this.clock.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n    incBreakLength() {\r\n        if (this.state.currentStatus === \"Stopped\") {\r\n            let session = this.state.currentSession\r\n            var length = this.state.breakLength\r\n            var timer = length * 60\r\n            if (session === \"Break\") {\r\n                if (length < 60) {\r\n                    this.setState({\r\n                        breakLength: length + 1,\r\n                        time: timer + 60\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (length < 60) {\r\n                    this.setState({\r\n                        breakLength: length + 1,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    decBreakLength() {\r\n        if (this.state.currentStatus === \"Stopped\") {\r\n            let session = this.state.currentSession\r\n            var length = this.state.breakLength\r\n            var timer = length * 60\r\n            if (session === \"Break\") {\r\n                if (length > 1) {\r\n                    this.setState({\r\n                        breakLength: length - 1,\r\n                        time: timer - 60\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (length > 1) {\r\n                    this.setState({\r\n                        breakLength: length - 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    incSessionLength() {\r\n        if (this.state.currentStatus === \"Stopped\") {\r\n\r\n            let session = this.state.currentSession\r\n            var length = this.state.sessionLength\r\n            var timer = length * 60\r\n            if (session === \"Session\") {\r\n                if (length < 60) {\r\n                    this.setState({\r\n                        sessionLength: length + 1,\r\n                        time: timer + 60\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (length < 60) {\r\n                    this.setState({\r\n                        sessionLength: length + 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    decSessionLength() {\r\n        if (this.state.currentStatus === \"Stopped\") {\r\n            let session = this.state.currentSession\r\n            var length = this.state.sessionLength\r\n            var timer = length * 60\r\n\r\n            if (session === \"Session\") {\r\n                if (length > 1) {\r\n                    this.setState({\r\n                        sessionLength: length - 1,\r\n                        time: timer - 60\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (length > 1) {\r\n                    this.setState({\r\n                        sessionLength: length - 1\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    clock() {\r\n        let session = this.state.currentSession;\r\n        let length = 0;\r\n        let status = this.state.currentStatus;\r\n\r\n        session === \"Session\"\r\n            ? (length = this.state.sessionLength)\r\n            : (length = this.state.breakLength)\r\n        let timer = this.state.time;\r\n\r\n        if (this.state.time === 0) {\r\n            this.audioBeep.currentTime = 0\r\n            this.audioBeep.play()\r\n        }\r\n        if (timer < 0) {\r\n            if (session === \"Session\") {\r\n                this.startStop()\r\n                this.setState({\r\n                    currentSession: \"Break\",\r\n                    time: this.state.breakLength * 60,\r\n                    restart: 1,\r\n                    count: 1\r\n                })\r\n            }\r\n            else {\r\n                this.startStop()\r\n                this.setState({\r\n                    currentSession: \"Session\",\r\n                    time: this.state.sessionLength * 60,\r\n                    restart: 1,\r\n                    count: 1\r\n                })\r\n            }\r\n        }\r\n\r\n        if (this.state.restart === 1) {\r\n            this.startStop()\r\n            this.setState({\r\n                restart: 0\r\n            })\r\n        }\r\n\r\n\r\n        let minutes = Math.floor(timer / 60);\r\n        let seconds = timer - minutes * 60;\r\n\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        return minutes + \":\" + seconds;\r\n    }\r\n    countDown() {\r\n        if ((this.state.count > 0) && (this.state.count < 4)) {\r\n            this.setState({\r\n                time: this.state.time - 1,\r\n                count: this.state.count + 1\r\n            })\r\n        }\r\n        else if (this.state.count === 4) {\r\n            this.audioBeep.pause()\r\n            this.audioBeep.currentTime = 0\r\n            this.setState({\r\n                time: this.state.time - 1,\r\n                count: 0\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                time: this.state.time - 1\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    startStop() {\r\n        let status = this.state.currentStatus;\r\n\r\n        if (status === \"Running\") {\r\n            clearInterval(this.state.timeInterval)\r\n            this.setState({\r\n                currentStatus: \"Stopped\"\r\n            });\r\n        }\r\n        else {\r\n\r\n            const intervalId = setInterval(() => {\r\n                this.countDown()\r\n            }, 1000)\r\n            if (this.state.time === 0) {\r\n                this.audioBeep.currentTime = 0\r\n                this.audioBeep.play()\r\n            }\r\n            this.setState({\r\n                timeInterval: intervalId,\r\n                currentStatus: \"Running\"\r\n            });\r\n        }\r\n\r\n    }\r\n    reset() {\r\n        clearInterval(this.state.timeInterval)\r\n        this.setState({\r\n            breakLength: 5,\r\n            sessionLength: 25,\r\n            currentSession: \"Session\",\r\n            currentStatus: \"Stopped\",\r\n            time: 1500,\r\n            timeInterval: '',\r\n            restart: 0,\r\n            count: 0\r\n        });\r\n        this.audioBeep.pause()\r\n        this.audioBeep.currentTime = 0\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"timeClock\">\r\n                <div>\r\n                    <h1>Time Clock</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-5\">\r\n                        <SetTime\r\n                            titleId=\"break-label\"\r\n                            title=\"Break Length\"\r\n                            decId=\"break-decrement\"\r\n                            incId=\"break-increment\"\r\n                            lengthId=\"break-length\"\r\n                            onInc={this.incBreakLength}\r\n                            onDec={this.decBreakLength}\r\n                            length={this.state.breakLength}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-5\">\r\n                        <SetTime\r\n                            titleId=\"session-label\"\r\n                            title=\"Session Length\"\r\n                            decId=\"session-decrement\"\r\n                            incId=\"session-increment\"\r\n                            lengthId=\"session-length\"\r\n                            onInc={this.incSessionLength}\r\n                            onDec={this.decSessionLength}\r\n                            length={this.state.sessionLength}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div id=\"timer-label\">\r\n                        <h3>{this.state.currentSession}</h3>\r\n                    </div>\r\n                    <div id=\"time-left\">\r\n                        <audio id=\"beep\" ref={(audio) => { this.audioBeep = audio; }}>\r\n                            <source src=\"http://commondatastorage.googleapis.com/codeskulptor-demos/DDR_assets/Sevish_-__nbsp_.mp3\" type=\"audio/mpeg\">\r\n                            </source>\r\n                        </audio>\r\n\r\n                        {this.clock()}\r\n                    </div>\r\n                    <br />\r\n                    <button id=\"start_stop\" onClick={this.startStop}>\r\n                        <i className=\"fa fa-play\" />  <i className=\"fa fa-pause\" />\r\n            start/stop\r\n          </button>\r\n                    <button id=\"reset\" onClick={this.reset}>\r\n                        reset\r\n          </button>\r\n                </div>\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport Home from './components/home'\nimport Navigationbar from './components/navigationbar'\nimport Projects from './components/projects';\nimport TimeClock from './components/projects/pomodoro/Pomodoro';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Jae-Min's Portfolio\n      </header>\n      <body>\n        <div className=\"text-center\">\n          <Navigationbar />\n          <Home />\n          <Projects />\n          \n        </div>\n\n      </body>\n    </div>\n  );\n}\n\nexport default function AppRouter(){\n  return(\n    <Router>\n      <div>\n      </div>\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route exact path=\"/TimeClock\">\n          <TimeClock />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}